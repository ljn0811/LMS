<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.adm.dao.StudentDao">

	<!-- 강의목록 조회 -->
	<select id="studentLectureList" resultType="kr.happyjob.study.adm.model.StudentVO">
		/*kr.happy.study.adm.dao.StudentDao.studentlectureList*/
		SELECT   lec_no
			      , lec_nm
			      , 	CONCAT(lec_start, ' ~ ', lec_end) AS lec_date
	    FROM	 tb_lecture
		<where>
 				<if test="(searchtitle != null) and (!searchtitle.equals(''))">
 			       AND lec_nm Like CONCAT('%', #{searchtitle}, '%')
 			   </if>
 		</where>
		ORDER BY lec_date DESC
		LIMIT #{startpos}, #{pagesize}
	</select>
	
	<!-- 강의목록 카운트 조회 -->
	<select id="studentLectureListCnt" resultType="int">
		/*kr.happy.study.adm.dao.StudentDao.studentlectureListCnt*/
		SELECT COUNT(1) AS tot_cnt FROM tb_lecture
		<where>
 			<if test="(searchtitle != null) and (!searchtitle.equals(''))">
 			     AND lec_nm Like CONCAT('%', #{searchtitle}, '%')
 			</if>
 		</where>
	</select>

	<!-- 학생관리 조회 -->
	<select id="studentList" resultType="kr.happyjob.study.adm.model.StudentVO">
    <!-- kr.happy.study.adm.dao.StudentDao.studentList -->
	    SELECT ui.user_no
	            , ui.name
	            , ui.user_phone
	            , DATE_FORMAT(ui.created_at, '%Y.%m.%d') AS created_at
	            , le.lec_nm
	    FROM tb_userinfo ui
	    LEFT OUTER JOIN tb_lecstd_info li ON ui.user_no = li.user_no 
	    INNER JOIN tb_lecture le ON le.lec_no = li.lec_no
	    <where>
	        <if test="(searchStudent != null) and (!searchStudent.equals(''))">
	            AND ui.name Like CONCAT('%', #{searchStudent}, '%')
	        </if>
	        <if test="(searchstdate != null) and (!searchstdate.equals(''))">
	            AND ui.created_at <![CDATA[>=]]> STR_TO_DATE(#{searchstdate}, '%Y-%m-%d')    
	        </if>
	        <if test="(searcheddate != null) and (!searcheddate.equals(''))">
	            AND ui.created_at <![CDATA[<=]]> STR_TO_DATE(#{searcheddate}, '%Y-%m-%d')    
	        </if>    
	        <if test="(lec_nm != null) and (!lec_nm.equals(''))">
	            AND le.lec_nm = #{lec_nm}
	        </if>
	        AND ui.user_type = 'A'
	    </where>
	    ORDER BY created_at DESC
	    LIMIT #{startpos}, #{pagesize}
	</select>
	
	<!-- 학생관리 카운트 조회 -->
	<select id="studentListCnt" resultType="int">
		/*kr.happy.study.adm.dao.StudentDao.studentListCnt*/
		SELECT COUNT(1) AS tot_cnt 
		FROM tb_userinfo ui
	    LEFT OUTER JOIN tb_lecstd_info li ON ui.user_no = li.user_no 
	    INNER JOIN tb_lecture le ON le.lec_no = li.lec_no
        <where>
	        <if test="(searchStudent != null) and (!searchStudent.equals(''))">
	            AND ui.name Like CONCAT('%', #{searchStudent}, '%')
	        </if>
	        <if test="(searchstdate != null) and (!searchstdate.equals(''))">
	            AND ui.created_at <![CDATA[>=]]> STR_TO_DATE(#{searchstdate}, '%Y-%m-%d')    
	        </if>
	        <if test="(searcheddate != null) and (!searcheddate.equals(''))">
	            AND ui.created_at <![CDATA[<=]]> STR_TO_DATE(#{searcheddate}, '%Y-%m-%d')    
	        </if>    
	        <if test="(lec_nm != null) and (!lec_nm.equals(''))">
	            AND le.lec_nm = #{lec_nm}
	        </if>
	        AND ui.user_type = 'A'
	    </where>
	</select>

    <!-- 학생정보 단건조회 -->
	<select id="selectStudent" resultType="kr.happyjob.study.adm.model.StudentVO">
		/*kr.happy.study.adm.dao.StudentDao.selectStudent*/
		SELECT  loginID
		         , user_no
		         , name
		         , user_birth
		         , user_phone
		         , user_gender
		         , user_email
		         , user_location
		   FROM tb_userinfo
		   WHERE user_no = #{user_no}
	</select>
	
	<!-- 수강내역 -->
	<select id="selectLectureList" resultType="kr.happyjob.study.adm.model.StudentVO">
		/*kr.happy.study.adm.dao.StudentDao.selectLectureList*/
		SELECT  le.lec_no
			     , le.lec_nm
			     , CONCAT(le.lec_start, ' ~ ', le.lec_end) AS lec_date
			     , li.apv
	    FROM	 tb_lecture le
	    INNER JOIN tb_lecstd_info li ON li.lec_no = le.lec_no
		WHERE li.user_no = #{user_no}
	</select>
	
	<!-- 수강내역 카운트-->
	<select id="selectLectureListCnt" resultType="int">
		/*kr.happy.study.adm.dao.StudentDao.selectLectureListCnt*/
		SELECT COUNT(1) AS tot_cnt 
	    FROM	 tb_lecture le
	    INNER JOIN tb_lecstd_info li ON li.lec_no = le.lec_no
		WHERE li.user_no = #{user_no}
	</select>

     <!-- 미수강내역 -->
	<select id="notLectureList" resultType="kr.happyjob.study.adm.model.StudentVO">
		/*kr.happy.study.adm.dao.StudentDao.notLectureList*/
		SELECT  le.lec_no
			     , le.lec_nm
			     , CONCAT(le.lec_start, ' ~ ', le.lec_end) AS lec_date
		FROM	 tb_lecture le
	    LEFT OUTER JOIN tb_lecstd_info li ON li.lec_no = le.lec_no AND li.user_no = #{user_no} 
		WHERE li.apv IS NULL;
	</select>
	
	<!-- 관리자 수강등록 여부 N변경 -->
	<insert id="adminLinsertStudentInfo">
	    /*kr.happyjob.study.std.dao.LectureDao.adminLinsertStudentInfo*/
	   INSERT INTO tb_lecstd_info
	                  (   user_no
	                     ,lec_no
	                     ,apv
	        ) VALUES (
	                     #{userno} 
	                    ,#{lec_no} 
	                    ,'N'
	                  )
	</insert>
	
	<!-- 수강등록으로 인원증가 -->
    <update id="adminLectureUpdate">
	      UPDATE tb_lecture
	           SET lec_cnt = lec_cnt + 1
	       WHERE lec_no =  #{lec_no}
	 </update>	
	 
	 <!-- 신청인원 -->
	 <select id="getAdminLecCnt" resultType="Integer">
	   /*kr.happyjob.study.std.dao.LectureDao.getLecCnt*/
        SELECT COALESCE(lec_cnt, 0) AS lec_cnt
         FROM tb_lecture
         WHERE lec_no = #{lec_no} 
	</select>
	
	<!-- 최대인원 -->
	<select id="getAdminLecMaxCnt" resultType="Integer">
	   /*kr.happyjob.study.std.dao.LectureDao.getLecMaxCnt*/
       SELECT COALESCE(lec_max_cnt, 0) AS lec_max_cnt
         FROM tb_lecture
         WHERE lec_no = #{lec_no} 
	</select>

</mapper>