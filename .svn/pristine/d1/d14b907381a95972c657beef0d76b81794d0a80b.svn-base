package kr.happyjob.study.tut.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.notice.model.Noticevo;
import kr.happyjob.study.tut.model.LecturePlanVO;
import kr.happyjob.study.tut.service.LecturePlanService;


@Controller
@RequestMapping("/tut/")
public class LecturePlanController {
   
   @Autowired
   LecturePlanService lecturePlanService;
   
   // Set logger
   private final Logger logger = LogManager.getLogger(this.getClass());

   // Get class name for logger
   private final String className = this.getClass().toString();
   
   
   
   /**
    * 강의계획서 초기화면
    */
   @RequestMapping("lecturePlan.do")
   public String comnCodMgr(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
         HttpServletResponse response, HttpSession session) throws Exception {
      
      logger.info("+ Start " + className + ".LecturePlan");
      logger.info("   - paramMap : " + paramMap);
      
      logger.info("+ End " + className + ".LecturePlan");

      return "tut/lecturePlan";
   } 
   
   // 강의계획서 목록 불러오기
   @RequestMapping("lecturePlanList.do")
	public String lecturePlanList( @RequestParam Map<String, Object> paramMap, Model model, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".lecturePlanList");
		logger.info("   - paramMap : " + paramMap);
		
		int cpage = Integer.valueOf((String)paramMap.get("cpage"));
		int pagesize = Integer.valueOf((String)paramMap.get("pagesize"));
		int startpos = (cpage - 1) * pagesize;
		
		paramMap.put("startpos", startpos);
		paramMap.put("pagesize", pagesize);
		
		List<LecturePlanVO> listData = lecturePlanService.lecturePlanList(paramMap);
		int listCnt = lecturePlanService.lecturePlanCnt(paramMap);
		
		model.addAttribute("listData",listData);
		model.addAttribute("listCnt",listCnt);
		
		logger.info("+ End " + className + ".lecturePlanList");

		return "notice/lecturePlanList";
	}	
}