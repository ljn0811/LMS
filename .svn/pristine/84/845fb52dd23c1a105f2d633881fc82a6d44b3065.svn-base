<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.study.qanda.dao.QandaDao">

   <!-- 목록 조회 -->
   <select id="qandaList" resultType="kr.happyjob.study.qanda.model.QandaVO">
     SELECT 	q.qna_id
					,	q.user_no					
    				,	ui.name
    				,	q.qna_title
    				,	q.created_at
    				,	q.qna_cnt
		FROM 		tb_qna q
        	INNER JOIN tb_userinfo ui 
        					ON ui.user_no = q.user_no
         <where>
      		<if test="(keyword != null) and (!keyword.equals(''))">
      		<choose>
        		<when test= "(searchKey eq 'all'.toString())">
            		AND q.qna_title LIKE concat('%', #{keyword}, '%')
             		OR  ui.name LIKE concat('%', #{keyword}, '%')
        		</when>
        		<when test= "(searchKey eq 'qnaTitle'.toString())">
            		AND q.qna_title LIKE concat('%', #{keyword}, '%')
        		</when>
        		<when test= "(searchKey eq 'qnaName'.toString())">
            		AND ui.name LIKE concat('%', #{keyword}, '%')
        		</when>
      		</choose>
      		</if> 
    	</where>
      ORDER BY q.qna_id DESC
      LIMIT #{startPos}, #{pageSize}
   </select>
   
   <!-- 총 갯수 조회 -->
   <select id="qandaCnt" resultType="int">
      SELECT count(*)
         FROM tb_qna q
         	INNER JOIN tb_userinfo ui ON ui.user_no = q.user_no
       <where>
      		<if test="(keyword != null) and (!keyword.equals(''))">
      		<choose>
        		<when test= "(searchKey eq 'all'.toString())">
            		AND q.qna_title LIKE concat('%', #{keyword}, '%')
             		OR  ui.name LIKE concat('%', #{keyword}, '%')
        		</when>
        		<when test= "(searchKey eq 'qnaTitle'.toString())">
            		AND q.qna_title LIKE concat('%', #{keyword}, '%')
        		</when>
        		<when test= "(searchKey eq 'qnaName'.toString())">
            		AND ui.name LIKE concat('%', #{keyword}, '%')
        		</when>
      		</choose>
      		</if> 
    	</where>
   </select> 
   
   <insert id="qnaSave">
       <selectKey resultType="int" keyProperty="qna_id" order="BEFORE">
            SELECT ifnull(max(qna_id),0) + 1 FROM tb_qna
        </selectKey> 
       INSERT INTO tb_qna (
       						qna_id
                        ,	user_no
                        ,	qna_title
                        ,	qna_content
                        ,	created_at
                        ,	qna_cnt
       ) VALUES (
       				   		#{qna_id}
                       ,	(SELECT user_no FROM tb_userinfo WHERE loginId = #{loginId})
                       ,	#{qnaTitle}
                       ,	#{qnaContent}
                       ,	now()
                       ,	0
       )
   </insert>
   
   <select id="qnaDtl" resultType="kr.happyjob.study.qanda.model.QandaVO">
   		SELECT 	q.qna_id
					,	q.user_no					
    				,	ui.name
    				,	q.qna_title
    				,	q.qna_content
    				,	q.created_at
    				,	q.qna_cnt
		FROM 		tb_qna q
        	INNER JOIN tb_userinfo ui 
        					ON ui.user_no = q.user_no
   		WHERE	q.qna_id = #{qnaId}
   </select>
   
   <update id="qnaUpdate">
         UPDATE 		tb_qna q
         INNER JOIN 	tb_userinfo ui
        				ON 	ui.user_no 		= q.user_no
              SET 			q.qna_title 		= #{qnaTitle}
                  		,		q.qna_content = #{qnaContent}
          WHERE 			q.qna_id 			= #{qnaId}
   </update>
   
   <delete id="qnaDelete">
        DELETE 
        FROM 			tb_qna
        WHERE 		qna_id = #{qnaId}
   </delete>
   
   <delete id="commentDeleteAll">
   		DELETE
   		FROM			tb_qna_comment
   		WHERE		qna_id	= #{qnaId}
   </delete>
   
   <delete id="commentDeleteOne">
   		DELETE
   		FROM			tb_qna_comment
   		WHERE		qna_id	= #{qnaId}
   				and		comment_no	=	#{commentNo}
   </delete>
   
    <select id="commentList"  resultType="kr.happyjob.study.qanda.model.QnaCommentVO">
   		SELECT 	qc.comment_no
   					,	qc.qna_id
   					,	ui.name
   					,	qc.user_no
   					,	qc.comment_content
   					,	qc.created_at
   		FROM 		tb_qna_comment qc
   		INNER JOIN tb_userinfo ui 
        					ON ui.user_no = qc.user_no
   		WHERE	qc.qna_id	=	#{qnaId}
   </select>
   
   <insert id="qnaCommentSave">
   		<selectKey resultType="int" keyProperty="comment_no" order="BEFORE">
            SELECT ifnull(max(comment_no),0) + 1 FROM tb_qna_comment
        </selectKey>
        
   		INSERT INTO tb_qna_comment(
   					comment_no
   				,	qna_id
   				,	user_no
   				,	comment_content
   				,	created_at
   		)VALUES(
   					#{comment_no}
   				,	#{qnaId}
   				,	(SELECT user_no FROM tb_userinfo WHERE loginId = #{loginId})
   				,	#{comment}
   				,	now()   					
   		)
   </insert>
   
</mapper>